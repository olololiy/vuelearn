{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-a806015e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"input\", {\n    value: $props.modelValue,\n    onInput: _cache[0] || (_cache[0] = (...args) => $options.updateInput && $options.updateInput(...args)),\n    type: \"text\",\n    class: \"input\"\n  }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_1);\n}","map":{"version":3,"mappings":";;;;uBACEA,oBAA2E;IAAnEC,KAAK,EAAEC,iBAAU;IAAGC,OAAK,yCAAEC,qDAAW;IAAEC,IAAI,EAAC,MAAM;IAACC,KAAK,EAAC","names":["_createElementBlock","value","$props","onInput","$options","type","class"],"sourceRoot":"","sources":["/home/artyom/Documents/workspace/vuelearn/src/—Åomponents/UI/MyInput.vue"],"sourcesContent":["<template>\n  <input :value=\"modelValue\" @input=\"updateInput\" type=\"text\" class=\"input\" >\n</template>\n\n<script>\nexport default {\n  name: \"my-input\",\n  props:{\n    modelValue:[String, Number]\n  },\n  methods: {\n    updateInput(event){\n        this.$emit('update:modelValue', event.target)\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n.input {\n  width: 100%;\n  border: 1px solid teal;\n  padding: 10px 15px;\n  margin-top: 15px;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}